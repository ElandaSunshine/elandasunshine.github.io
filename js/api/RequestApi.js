import $ from"https://cdn.jsdelivr.net/npm/jquery@3.7.1/+esm";export default class RequestApi{#e={expiry:0,data:null};#t;#i=0;#a;#r;constructor({apiUrl:e,cacheTime:t,cacheKey:i,cacheMode:a}){this.#t=new URL(e.trim()),this.#r=i??this.#t.href,this.#i=t??this.#i,this.shouldCache()&&(this.#e=this.#s())}request({endpoint:e,params:t,filter:i,headers:a,onlyIfCached:r}){const s=e||this.apiUrl.pathname;if(!0===r)return Promise.resolve((this.#e.data??{})[s]??null);if(this.shouldCache()&&(this.isCacheExpired()&&(console.debug(`Cache expired by ${Math.abs(this.getRemainingTime())} minutes (${this.getLocalTimeOfExpiration()}), resetting...`),this.#e.expiry=(new Date).getTime()+6e4*this.#i,this.#e.data=null,console.debug(`Reset cache to expire in ${this.#i} minutes`)),this.isCached(s)))return console.debug(`Found cache entry for endpoint '${s}', skipping request...`),this.#i>-1?console.debug(`Expiring in: ${this.getRemainingTime()} minutes (${this.getLocalTimeOfExpiration()})`):console.debug("Expiring in: A weird computer said 42, but we think that 'Never' is more likely"),Promise.resolve(JSON.parse(JSON.stringify(this.#e.data[s])));const c=(()=>e?new URL(e,this.apiUrl+"/"):new URL(this.apiUrl))();for(const[e,i]of Object.entries(t??{}))c.searchParams.set(e,i);return $.get({url:c.href,headers:a??{}},(e=>{if(i){const t=!0===i.shouldExclude,a=new Set(i.keys),r=e=>{Object.keys(e).forEach((i=>t!==a.has(i)||delete e[i]))};if(Array.isArray(e)){if(e.length>0){if("object"!=typeof e[0])throw new Error(`Cannot filter response of type '${typeof e}', needs to be an array of objects`);e.forEach((e=>r(e)))}}else{const t=invoke((()=>{if(i.filterPath){const t=i.filterPath.split(".");let a=e;for(const e of t)a=a[e];return a}return e}));if(!Array.isArray(t))throw new Error(`Cannot filter response of type '${typeof t}', needs to be an array of objects`);if(t.length>0){if("object"!=typeof t[0])throw new Error(`Cannot filter response of type '${typeof t}', needs to be an array of objects`);r(t)}}}this.shouldCache()&&(null==this.#e.data&&(this.#e.data={}),this.#e.data[s]=clone(e),console.debug(`Cached request '${s}', writing to local storage`),this.#c())}))}get apiUrl(){return this.#t}shouldCache(){return 0!==this.#i}getRemainingTime(){if(-1===this.#i)return-1;const e=(new Date).getTime();return Math.round((this.#e.expiry-e)/600)/100}getLocalTimeOfExpiration(){return this.#i<0?"Never":new Date(this.#e.expiry).toLocaleString("default",{month:"long",day:"2-digit",year:"numeric",hour:"2-digit",minute:"2-digit"})}shouldCacheInLocalStorage(){return"local"===this.#a||"both"===this.#a}shouldCacheInHttpCache(){return"http"===this.#a||"both"===this.#a}isCached(e){return this.#e.data?.hasOwnProperty(e)}isCacheExpired(){return this.#i>-1&&(0===this.#i||(new Date).getTime()>=this.#e.expiry)}#c(){localStorage.setItem(this.#r,JSON.stringify(this.#e))}#s(){const e={expiry:0,data:null};try{const t=JSON.parse(localStorage.getItem(this.#r));return"number"!=typeof t?.expiry||"object"!=typeof t?.data?e:t??e}catch(e){console.log(`Could not restore API cache '${this.#r}' from local storage: ${e}`)}return e}}function clone(e){return JSON.parse(JSON.stringify(e))}function invoke(e,...t){return e(...t)}
